<form version="1.1">
  <label>Queue Summary</label>
  <description>View general queue statistics over a period of time.</description>
  <search id="all_call_base_search">
    <query>
      `default_index` sourcetype="3cx:calls"
| dedup host, call_id, seg_order
| eval q_num=case(dst_type=4, dst_dn, src_type=4, src_dn)
| eval agent1=if(dst_type=0, dst_caller_number." - ".dst_display_name, "N/A"), agent2=if(src_type=0, src_caller_number." - ".src_display_name, "N/A"), agent=mvappend(agent1, agent2)
| sort 0 -call_id, + seg_order
| stats latest(_time) as _time, sum(has_queue) as has_queue, first(call_dir) as call_dir, list(call_dir) as call_dir_list, values(q_num) as q_num, values(agent) as Agent by host, call_id
    </query>
    <earliest>$time_overview.earliest$</earliest>
    <latest>$time_overview.latest$</latest>
  </search>
  <search id="agents_login_timerange_finder">
    <query>| makeresults | addinfo | eval extra_earliest_time=relative_time(info_min_time, "-1d"), extra_latest_time=info_max_time</query>
    <earliest>$time_overview.earliest$</earliest>
    <latest>$time_overview.latest$</latest>
    <done>
      <set token="tkn_extra_earliest_time">$result.extra_earliest_time$</set>
      <set token="tkn_extra_latest_time">$result.extra_latest_time$</set>
      <set token="tkn_earliest_time">$result.info_min_time$</set>
      <set token="tkn_latest_time">$result.info_max_time$</set>
    </done>
  </search>
  <search>
    <query>`default_index` sourcetype="3cx:queue_agent_logins" is_loggedin_in_queue=t ($hosts2$) ($queues1$) | dedup agent_num | eval Agent="Ext.".agent_num." - ".agent_fname." ".agent_lname | fields Agent | table Agent
    | stats values(Agent) as Agent | eval Agents=mvjoin(Agent, "\",\"") | eval Agents="\"".Agents."\"" </query>
    <earliest>$time_overview.earliest$</earliest>
    <latest>$time_overview.latest$</latest>
    <done>
      <set token="tkn_agents_search">$result.Agents$</set>
    </done>
  </search>
  <fieldset submitButton="false">
    <input type="time" token="time_overview">
      <label>Time</label>
      <default>
        <earliest>-7d@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="multiselect" token="hosts2" searchWhenChanged="true">
      <label>Office Name</label>
      <choice value="*">All</choice>
      <default>*</default>
      <prefix>(</prefix>
      <suffix>)</suffix>
      <initialValue>*</initialValue>
      <valuePrefix>host=</valuePrefix>
      <delimiter> OR </delimiter>
      <fieldForLabel>officeNames</fieldForLabel>
      <fieldForValue>host</fieldForValue>
      <search>
        <query>`default_index`
| lookup host_lookup.csv host OUTPUT hostname
| eval officeNames = if(isnull(hostname),host,hostname)
| dedup officeNames
| table host, officeNames
| sort + host</query>
        <earliest>$time_overview.earliest$</earliest>
        <latest>$time_overview.latest$</latest>
      </search>
    </input>
    <input type="multiselect" token="queues1" searchWhenChanged="true">
      <label>Queue(s)</label>
      <choice value="*">All</choice>
      <default>*</default>
      <prefix>(</prefix>
      <suffix>)</suffix>
      <valuePrefix>q_num="</valuePrefix>
      <delimiter> OR </delimiter>
      <fieldForLabel>fqname</fieldForLabel>
      <fieldForValue>q_num</fieldForValue>
      <search>
        <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ | dedup q_num | eval fqname = q_name+" ("+q_num+")" | sort + q_name</query>
        <earliest>$time_overview.earliest$</earliest>
        <latest>$time_overview.latest$</latest>
      </search>
      <valueSuffix>"</valueSuffix>
    </input>
    <input type="text" token="slatime" searchWhenChanged="true">
      <label>SLA (in seconds)</label>
      <default>30</default>
      <initialValue>30</initialValue>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>Queue Calls</title>
      <single>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| stats count</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="height">70</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Total Queue Calls</option>
      </single>
      <single>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| where isnotnull(q_num) AND (isnull(reason_noanswerdesc) OR reason_noanswerdesc="") AND reason_failcode=0
| stats count</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="height">70</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Queue Calls Answered</option>
      </single>
      <single>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| where isnotnull(q_num) AND reason_noanswerdesc!="" 
| stats count</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="height">70</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Queue Calls Unanswered</option>
      </single>
      <single>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| where isnotnull(q_num) AND (isnull(reason_noanswerdesc) OR reason_noanswerdesc="") AND reason_failcode != 0
| stats count</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="height">70</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">Failed Queue Calls</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title>Number of Calls Received</title>
      <chart>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| timechart span=1d count BY q_name
| rename q_name as Queue, count as "Total Calls"</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="charting.axisTitleY.text">Calls Received</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.legend.placement">top</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>Daily Call Expectancy vs Agent Logins</title>
      <input type="dropdown" token="tkn_aggregation">
        <label>Aggregation for Heat Map</label>
        <choice value="sum">Summation</choice>
        <choice value="avg">Average</choice>
        <default>sum</default>
      </input>
      <input type="dropdown" token="tkn_agent_login_less_than">
        <label>Exclude Agent Login</label>
        <choice value="0">Do not exclude any logins</choice>
        <choice value="60">Less than 1 minute</choice>
        <choice value="300">Less than 5 minutes</choice>
        <choice value="1800">Less than 30 minutes</choice>
        <choice value="3600">Less than 1 hour</choice>
        <default>60</default>
      </input>
      <chart>
        <title>Hourly Heat Map</title>
        <search base="all_call_base_search">
          <query>| search $hosts2$
| search $queues1$ | where has_queue&gt;0
| eval call_dir=if(isnull(call_dir), "Other", call_dir)
| timechart span=1h count by call_dir
| eval Hour=strftime(_time,"%H") 
| stats $tkn_aggregation$(*) as * by Hour
| append [| search `default_index` sourcetype="3cx:queue_agent_logins" ($hosts2$) ($queues1$) earliest=$tkn_extra_earliest_time$ latest=$tkn_extra_latest_time$ | dedup idcallcent_ag_queuestatus
| transaction q_num agent_num startswith="is_loggedin_in_queue=t" endswith="is_loggedin_in_queue=f" keepevicted=t | search eventcount=2
| eval login_time=strptime(mvindex(timeofupdate,0), "%Y-%m-%d %H:%M:%S"), logout_time=strptime(mvindex(timeofupdate,1), "%Y-%m-%d %H:%M:%S")
| dedup agent_num, login_time
| where duration&gt;$tkn_agent_login_less_than$
| eval time = mvrange(login_time,logout_time,"1h") | mvexpand time | where time&gt;=$tkn_earliest_time$ AND time&lt;=$tkn_latest_time$ | eval _time = time
| timechart span=1h count
| eval Hour=strftime(_time,"%H") | stats $tkn_aggregation$(count) as Agents_LoggedIn by Hour]
| stats first(*) as * by Hour
| fillnull Agents_LoggedIn, Inbound, Outbound, Internal value=0
| eval Agents_LoggedIn=if($tkn_aggregation|s$="avg", round(Agents_LoggedIn, 1), Agents_LoggedIn), Inbound=if($tkn_aggregation|s$="avg", round(Inbound, 1), Inbound), Outbound=if($tkn_aggregation|s$="avg", round(Outbound, 1), Outbound), Internal=if($tkn_aggregation|s$="avg", round(Internal, 1), Internal), Other=if($tkn_aggregation|s$="avg", round(Other, 1), Other)</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.overlayFields">Agents_LoggedIn</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.fieldColors">{"Inbound":#4fa483, "Outbound":#ec9860, "Internal": #af575a, "Other": #cce34d, "Agents_LoggedIn": #006caa}</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Queue Calls Distribution for Queue Agents</title>
      <chart>
        <search base="all_call_base_search">
          <query>| search $hosts2$ 
| search $queues1$ | where has_queue&gt;0
| eval call_dir=if(isnull(call_dir), "Other", call_dir)
| eval Agent=mvfilter(!match(Agent,"N/A"))
| mvexpand Agent
| search Agent IN ($tkn_agents_search$)
| chart count(call_id) as count over Agent by call_dir
| fillnull Inbound, Outbound, Internal value=0</query>
        </search>
        <option name="charting.axisTitleY.text">No. of Calls</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.fieldColors">{"Inbound":#4fa483, "Outbound":#ec9860, "Internal": #af575a, "Other": #cce34d}</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">search?q=%60default_index%60%20sourcetype%3D%223cx%3Acalls%22%20$hosts2$%20%0A%7C%20dedup%20host%2C%20call_id%2C%20seg_order%20%7C%20sort%200%20-call_id%2C%20%2B%20seg_order%0A%7C%20eval%20q_num%3Dcase(dst_type%3D4%2C%20dst_dn%2C%20src_type%3D4%2C%20src_dn)%0A%7C%20eval%20agent1%3Dif(dst_type%3D0%2C%20dst_caller_number.%22%20-%20%22.dst_display_name%2C%20%22N%2FA%22)%2C%20agent2%3Dif(src_type%3D0%2C%20src_caller_number.%22%20-%20%22.src_display_name%2C%20%22N%2FA%22)%2C%20agent%3Dmvappend(agent1%2C%20agent2)%0A%7C%20stats%20sum(has_queue)%20as%20has_queue%2C%20first(call_dir)%20as%20call_dir%2C%20values(q_num)%20as%20q_num%2C%20values(agent)%20as%20Agent%2C%20list(seq_order)%20as%20Sequence%2C%20list(start_time)%20as%20%22Start%20Time%22%2C%20list(end_time)%20as%20%22End%20Time%22%2C%20list(src_caller_number)%20as%20%22Source%20Number%22%2C%20list(src_display_name)%20as%20%22Source%20Name%22%2C%20list(dst_caller_number)%20as%20%22Dest.%20Number%22%2C%20list(dst_display_name)%20as%20%22Dest.%20Name%22%2C%20list(action)%20as%20%22Action%22%20by%20host%2C%20call_id%0A%7C%20search%20$queues1$%20%7C%20where%20has_queue%3E0%0A%7C%20eval%20call_dir%3Dif(isnull(call_dir)%2C%20%22Other%22%2C%20call_dir)%0A%7C%20search%20call_dir%3D$click.name2|s$%0A%7C%20search%20Agent%3D$click.value|s$%0A%7C%20eval%20Agent%3D$click.value|s$%0A%7C%20fields%20-%20has_queue%2C%20q_num&amp;earliest=$time_overview.earliest$&amp;latest=$time_overview.latest$</link>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>All Calls Distribution for Queue Agents</title>
      <chart>
        <search base="all_call_base_search">
          <query>| search $hosts2$ 
| eval call_dir=if(isnull(call_dir), "Other", call_dir)
| eval Agent=mvfilter(!match(Agent,"N/A"))
| mvexpand Agent
| search Agent IN ($tkn_agents_search$)
| chart count(call_id) as count over Agent by call_dir
| fillnull Inbound, Outbound, Internal value=0</query>
        </search>
        <option name="charting.axisTitleY.text">No. of Calls</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.fieldColors">{"Inbound":#4fa483, "Outbound":#ec9860, "Internal": #af575a, "Other": #cce34d}</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">search?q=%60default_index%60%20sourcetype%3D%223cx%3Acalls%22%20$hosts2$%20%0A%7C%20dedup%20call_id%2C%20seg_order%20%7C%20sort%200%20-call_id%2C%20%2B%20seq_order%0A%7C%20eval%20q_num%3Dcase(dst_type%3D4%2C%20dst_dn%2C%20src_type%3D4%2C%20src_dn)%0A%7C%20eval%20agent1%3Dif(dst_type%3D0%2C%20dst_caller_number.%22%20-%20%22.dst_display_name%2C%20%22N%2FA%22)%2C%20agent2%3Dif(src_type%3D0%2C%20src_caller_number.%22%20-%20%22.src_display_name%2C%20%22N%2FA%22)%2C%20agent%3Dmvappend(agent1%2C%20agent2)%0A%7C%20stats%20sum(has_queue)%20as%20has_queue%2C%20first(call_dir)%20as%20call_dir%2C%20values(q_num)%20as%20q_num%2C%20values(agent)%20as%20Agent%2C%20list(seq_order)%20as%20Sequence%2C%20list(start_time)%20as%20%22Start%20Time%22%2C%20list(end_time)%20as%20%22End%20Time%22%2C%20list(src_caller_number)%20as%20%22Source%20Number%22%2C%20list(src_display_name)%20as%20%22Source%20Name%22%2C%20list(dst_caller_number)%20as%20%22Dest.%20Number%22%2C%20list(dst_display_name)%20as%20%22Dest.%20Name%22%2C%20list(action)%20as%20%22Action%22%20by%20host%2C%20call_id%0A%7C%20eval%20call_dir%3Dif(isnull(call_dir)%2C%20%22Other%22%2C%20call_dir)%0A%7C%20search%20call_dir%3D$click.name2|s$%0A%7C%20search%20Agent%3D$click.value|s$%0A%7C%20eval%20Agent%3D$click.value|s$%0A%7C%20fields%20-%20has_queue%2C%20q_num&amp;earliest=$time_overview.earliest$&amp;latest=$time_overview.latest$</link>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Call Sequences on the Queue Calls</title>
      <input type="radio" token="tkn_only_internal_call_seq">
        <label></label>
        <choice value="| eval call_dir_list=mvfilter(!match(call_dir_list,&quot;Inbound&quot;)) | search call_dir_list=*">Exclude Inbound</choice>
        <choice value="| eval call_dir_list=mvfilter(!match(call_dir_list,&quot;Outbound&quot;)) | search call_dir_list=*">Exclude Outbound</choice>
        <choice value="| search call_dir_list=*">Do not Exclude Any</choice>
        <default>| eval call_dir_list=mvfilter(!match(call_dir_list,"Inbound")) | search call_dir_list=*</default>
      </input>
      <chart>
        <title>The purpose of the chart is identify how often calls are being transferred internally in the Queue for auditing.</title>
        <search base="all_call_base_search">
          <query>| search $hosts2$ 
| search $queues1$ | where has_queue&gt;0
$tkn_only_internal_call_seq$
| mvexpand call_dir_list
| eval Agent=mvfilter(!match(Agent,"N/A"))
| mvexpand Agent
| search Agent IN ($tkn_agents_search$)
| chart count(call_id) as count over Agent by call_dir_list
| fillnull Inbound, Outbound, Internal value=0</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.fieldColors">{"Inbound":#4fa483, "Outbound":#ec9860, "Internal": #af575a, "Other": #cce34d}</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">search?q=%60default_index%60%20sourcetype%3D%223cx%3Acalls%22%20$hosts2$%20%0D%0A%7C%20dedup%20host%2C%20call_id%2C%20seg_order%0D%0A%7C%20eval%20q_num%3Dcase(dst_type%3D4%2C%20dst_dn%2C%20src_type%3D4%2C%20src_dn)%0D%0A%7C%20eval%20agent1%3Dif(dst_type%3D0%2C%20dst_caller_number.%22%20-%20%22.dst_display_name%2C%20%22N%2FA%22)%2C%20agent2%3Dif(src_type%3D0%2C%20src_caller_number.%22%20-%20%22.src_display_name%2C%20%22N%2FA%22)%2C%20agent%3Dmvappend(agent1%2C%20agent2)%0D%0A%7C%20eval%20tmp%3Dmvzip(seg_order%2C%20mvzip(call_dir%2C%20mvzip(call_start_time%2C%20mvzip(call_end_time%2C%20mvzip(src_type%2C%20mvzip(src_caller_number%2C%20mvzip(src_display_name%2C%20mvzip(dst_type%2C%20mvzip(dst_caller_number%2C%20mvzip(dst_display_name%2C%20seg_action_id%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%2C%20%22%7C%22)%0D%0A%7C%20stats%20sum(has_queue)%20as%20has_queue%2C%20values(q_num)%20as%20q_num%2C%20values(agent)%20as%20Agent%2C%20list(tmp)%20as%20tmp%20by%20host%2C%20call_id%0D%0A%7C%20search%20$queues1$%20%7C%20where%20has_queue%3E0%0D%0A%7C%20search%20Agent%3D$click.value|s$%0D%0A%7C%20mvexpand%20tmp%0D%0A%7C%20rex%20field%3Dtmp%20%22(%3F%3Cseg_order%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Ccall_dir%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Cstart_time%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Cend_time%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Csrc_type%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Csrc_caller_number%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Csrc_display_name%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Cdst_type%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Cdst_caller_number%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Cdst_display_name%3E%5B%5E%5C%7C%5D%2B)%5C%7C(%3F%3Caction%3E%5B%5E%5C%7C%5D%2B)%22%0D%0A%7C%20search%20call_dir%3D$click.name2|s$%0D%0A%7C%20table%20call_id%2C%20seg_order%2C%20Agent%2C%20call_dir%2C%20start_time%2C%20end_time%2C%20src_type%2C%20src_caller_number%2C%20src_display_name%2C%20dst_type%2C%20dst_caller_number%2C%20dst_display_name%2C%20action%0D%0A%7C%20sort%200%20-call_id%2C%20%2B%20seg_order&amp;earliest=$time_overview.earliest$&amp;latest=$time_overview.latest$</link>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Daily % Calls Answered by Queue</title>
      <table>
        <title>Calls</title>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$
| eval Queue = q_num+" - "+q_name
| eval Ab = if(isserviced="0", 1, 0)
| eval Ans = if(isserviced="1", 1, 0)
| eval SlaP = if(tot_ringing_sec&lt;=$slatime$,1,0)
| stats count as Total, sum(Ab) as Abandoned, sum(Ans) as Answered, sum(ts_servicing_sec) as TotTalk, avg(ts_servicing_sec) as AvgTalk, sum(tot_ringing_sec) as TotRing, avg(tot_ringing_sec) as AvgRing, sum(SlaP) as SlaPc by Queue
| eventstats sum(Total) as TotC
| eval PctOfCalls = round((Total/TotC)*100,2) . " %"
| eval PctOfSLA = round((SlaPc/Total)*100,2) . " %"
| eval SvPct = round(Answered*100/Total,1) . " %"
| eval TTalk = replace(tostring(TotTalk,"duration"),"\.(\d+)","")
| eval TRing = replace(tostring(TotRing,"duration"),"\.(\d+)","")
| eval TTalk = replace(TTalk,"(\d*)\+(\d+)\:(\d+)\:(\d+)","\1d \2h \3m \4s")
| eval TRing = replace(TRing,"(\d*)\+(\d+)\:(\d+)\:(\d+)","\1d \2h \3m \4s")
| eval TTalk = replace(TTalk,"(\d+)\:(\d+)\:(\d+)","\1h \2m \3s")
| eval TRing = replace(TRing,"(\d+)\:(\d+)\:(\d+)","\1h \2m \3s")
| eval ATalk = strftime(AvgTalk, "%Mm %Ss")
| eval ARing = strftime(AvgRing, "%Mm %Ss")
| table Queue, Total, Abandoned, Answered, PctOfCalls, SvPct, PctOfSLA, TRing, ARing, TTalk, ATalk
| rename Total as "Total Calls", SvPct as "% of Calls Serviced", PctOfSLA as "SLA Met %", TRing AS "Ring Time Total", ARing as "Mean Ring Time", TTalk AS "Talk Time Total", ATalk as "Mean Talk Time", PctOfCalls as "% of Calls Total"
| sort + q_num</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="totalsRow">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Average Durations</title>
      <input type="dropdown" token="savgs" searchWhenChanged="true">
        <label></label>
        <choice value="tot_ringing_sec">Average Customer Ring Time</choice>
        <choice value="tot_servicing_sec">Average Customer Talk Time</choice>
        <choice value="tot_polling_sec">Average Customer Poll Time</choice>
        <default>tot_ringing_sec</default>
        <initialValue>tot_ringing_sec</initialValue>
      </input>
      <chart>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| timechart span=1d avg($savgs$) BY q_name
| rename q_name as Queue</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="charting.axisLabelsY.majorUnit">60</option>
        <option name="charting.axisTitleY.text">Seconds</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>SLA Rate</title>
      <chart>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| eval SLTime = if(tot_ringing_sec&lt;=$slatime$,"SLA Met","SLA Breached")
| chart count AS QCalls by q_name, SLTime span=1d
| rename q_name as Queue</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.chart.stackMode">stacked100</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="height">312</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Failed Call Description(s)</title>
      <chart>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$ 
| dedup host, queuecall_id
| where reason_failcode != 0
| rename q_name AS "Queue #"
| chart count(start_time) AS "Abandoned # of Calls" by "Queue #" reason_faildesc</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="charting.axisTitleY.text"># of Calls</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.legend.placement">top</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>Unanswered Call Description(s)</title>
      <chart>
        <search>
          <query>`default_index` sourcetype="3cx:queuecalls" $hosts2$ $queues1$
| dedup host, queuecall_id
| where reason_noanswercode != 0
| rename q_name AS "Queue #"
| eval reason_noanswerdesc=case((reason_noanswerdesc="MaxWaitTime"), "Max Wait Time", (reason_noanswerdesc="NoAgents"), "No Agents Signed In", (reason_noanswerdesc="UserRequested"), "User Requested Callback", true(), "IMPOSSIBLE!")
| chart count(start_time) AS "Abandoned # of Calls" by "Queue #" reason_noanswerdesc</query>
          <earliest>$time_overview.earliest$</earliest>
          <latest>$time_overview.latest$</latest>
        </search>
        <option name="charting.axisTitleY.text"># of Calls</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.chart">column</option>
        <option name="charting.legend.placement">top</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
</form>